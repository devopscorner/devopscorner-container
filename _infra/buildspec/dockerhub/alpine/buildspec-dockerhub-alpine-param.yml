version: 0.2

env:
  # ==================== #
  #  Ref: SECRET CONFIG  #
  # ==================== #
  parameter-store:
    BUILDNUMBER: /devopscorner/cicd/lab/repo/devopscorner-container/buildnumber
    STORE_AWS_ACCOUNT: /devopscorner/cicd/lab/credentials/aws_account
    STORE_AWS_ACCESS_KEY: /devopscorner/cicd/lab/credentials/aws_access_key
    STORE_AWS_SECRET_KEY: /devopscorner/cicd/lab/credentials/aws_secret_key
    STORE_REPO_USERNAME: /devopscorner/cicd/lab/repo_credentials/codecommit/username
    STORE_REPO_PASSWORD: /devopscorner/cicd/lab/repo_credentials/codecommit/password_encoded
    STORE_DOCKERHUB_USERNAME: /devopscorner/cicd/lab/repo_credentials/dockerhub/username
    STORE_DOCKERHUB_PASSWORD: /devopscorner/cicd/lab/repo_credentials/dockerhub/password_encoded
    STORE_REPO_URL: /devopscorner/cicd/lab/repo/devopscorner-container/url
    STORE_REPO_BRANCH: /devopscorner/cicd/lab/repo/devopscorner-container/branch
    STORE_REPO_FOLDER: /devopscorner/cicd/lab/repo/devopscorner-container/folder
    STORE_EKS_CLUSTER: /devopscorner/cicd/lab/eks_cluster
    STORE_BASE64_PUB_KEY: /devopscorner/cicd/lab/credentials/base64_pub_key
    STORE_BASE64_PRIV_KEY: /devopscorner/cicd/lab/credentials/base64_priv_key
    STORE_BASE64_PEM_KEY: /devopscorner/cicd/lab/credentials/base64_pem_key
    STORE_BASE64_SSH_CONFIG: /devopscorner/cicd/lab/credentials/base64_ssh_config
    STORE_BASE64_KNOWN_HOSTS: /devopscorner/cicd/lab/credentials/known_hosts
    STORE_BASE64_KUBECONFIG: /devopscorner/cicd/lab/credentials/base64_kube_config

  # ===================================== #
  #  Ref: Pipeline Environment Variables  #
  # ===================================== #
  variables:
    ENV_CICD: "dev"
    CONTAINER_IMAGE: "devopscorner/cicd:alpine"
    AWS_DEFAULT_REGION: "ap-southeast-1"
    INFRA_CICD: "terraform/environment/providers/aws/infra/resources"
    INFRA_CICD_PATH: "cicd"
    INFRA_ECR_PATH: "devopscorner/cicd"
    TF_VERSION: "1.1.7"

phases:
  pre_build:
    commands:
      # ======================= #
      #  Setup Auth Repository  #
      # ======================= #
      - mkdir -p ~/.ssh
      - echo "${STORE_BASE64_PUB_KEY}" | base64 -d > ~/.ssh/id_rsa.pub
      - echo "${STORE_BASE64_PRIV_KEY}" | base64 -d > ~/.ssh/id_rsa
      - echo "${STORE_BASE64_KNOWN_HOSTS}" | base64 -d > ~/.ssh/known_hosts
      - echo "${STORE_BASE64_SSH_CONFIG}" | base64 -d > ~/.ssh/config
      - chmod 400 ~/.ssh/id_rsa*
      - chmod 400 ~/.ssh/config*
      - chmod 644 ~/.ssh/known_hosts
      - eval "$(ssh-agent -s)"
      - ssh-add ~/.ssh/id_rsa
      # =========================== #
      #  Using Spesific Repository  #
      # =========================== #
      # - GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa -o IdentitiesOnly=yes -F /dev/null' git clone --depth 5 ${STORE_REPO_URL}
      - echo '- DONE -'
  build:
    commands:
      # ========================= #
      #  Refactoring AWS Account  #
      # ========================= #
      - cd ${CODEBUILD_SRC_DIR} && find ./ -type f -exec sed -i "s/YOUR_AWS_ACCOUNT/${STORE_AWS_ACCOUNT}/g" {} \;
      # ============= #
      #  Build Image  #
      #============== #
      - make build-cicd-alpine ARGS=${STORE_AWS_ACCOUNT}
      # ============ #
      #  Tags Image  #
      #============= #
      - make dockerhub-tag-alpine
      - docker images --format "{{.Repository}}:{{.Tag}}" | grep ${INFRA_ECR_PATH}
      # ============ #
      #  Push Image  #
      #============= #
      # Login DockerHub (Inside Script)
      # Push to DockerHub
      - make dockerhub-push-alpine
      - echo '-- ALL DONE --'

artifacts:
  files:
    - _infra/*
    - compose/*
    - scripts/*
    - container-dockerhub.sh
    - container-ecr.sh
    - README.md
    - run-docker.sh
  name: "artifact-$(date '+%Y%m%d-%H%M%S')"
