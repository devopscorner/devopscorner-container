version: 0.2

env:
  # ==================== #
  #  Ref: SECRET CONFIG  #
  # ==================== #
  parameter-store:
    BUILDNUMBER: /devopscorner/cicd/lab/repo/devopscorner-container/buildnumber
    STORE_AWS_ACCOUNT: /devopscorner/cicd/lab/credentials/aws_account
    STORE_AWS_ACCESS_KEY: /devopscorner/cicd/lab/credentials/aws_access_key
    STORE_AWS_SECRET_KEY: /devopscorner/cicd/lab/credentials/aws_secret_key
    STORE_REPO_USENAME: /devopscorner/cicd/lab/repo_credentials/codecommit/username
    STORE_REPO_PASSWORD: /devopscorner/cicd/lab/repo_credentials/codecommit/password_encoded
    STORE_DOCKERHUB_USERNAME: /devopscorner/cicd/lab/repo_credentials/dockerhub/username
    STORE_DOCKERHUB_PASSWORD: /devopscorner/cicd/lab/repo_credentials/dockerhub/password_encoded
  # ===================================== #
  #  Ref: Pipeline Environment Variables  #
  # ===================================== #
  variables:
    env_aws_account: "${AWS_ACCOUNT}"
    env_aws_access_key: "${AWS_ACCESS_KEY}"
    env_aws_secret_key: "${AWS_SECRET_KEY}"
    env_repo_username: "${REPO_USERNAME}"
    env_repo_pubkey: "${REPO_PUBKEY}"  # base64 encoded
    env_dockerhub_username: "${DOCKERHUB_USERNAME}"
    env_dockerhub_password: "${DOCKERHUB_PASSWORD}"
    REPOSITORY: "https://github.com/devopscorner/devopscorner-container.git"
    PATH_REPO: "devops-container"

phase:
  install:
    commands:
      # Runtime Version
      # https://docs.aws.amazon.com/codebuild/latest/userguide/runtime-versions.html
      # https://docs.aws.amazon.com/codebuild/latest/userguide/available-runtimes.html
      runtime-versions:
        golang:1.16
      commands:
        - go version
        - echo $GOPATH
        - echo $GOROOT
  pre_build:
    commands:
        git clone $REPOSITORY $PATH_REPO
        cd $PATH_REPO
        find ./ -type f -exec sed -i "s/YOUR_AWS_ACCOUNT/${env_aws_account}/g" {} \;
        echo "- DONE -"
  build:
    commands:
      # ============= #
      #  Build Image  #
      #============== #
      - make build-cicd-alpine
      - export AWS_ACCESS_KEY=${env_aws_account}
      - export AWS_SECRET_KEY=${env_aws_secret_key}
      - make ecr-tag-alpine
      - echo "- DONE -"
      # ============ #
      #  Push Image  #
      #============= #
      - export AWS_ACCESS_KEY=${env_aws_account}
      - export AWS_SECRET_KEY=${env_aws_secret_key}
      - make ecr-push-alpine
      - echo "- DONE -"
      # =============== #
      #  Save Artefact  #
      #================ #
      - echo ">> Finishing (Save Artifacts)... "
      - export SNAPSHOT=$(date '+%Y%m%d-%H%M%S')
      - echo "Building Artifact..."
      - tar zcvf ./artifact-$SNAPSHOT.tgz compose/ scripts/ Makefile ./_infra/buildspec.yml run-docker.sh
      - echo "-- ALL DONE --"

artifacts:
  files:
    - "artifact-^[0-9]-^[0-9].tgz"
  name: "artifact-container"
  base-directory: /
